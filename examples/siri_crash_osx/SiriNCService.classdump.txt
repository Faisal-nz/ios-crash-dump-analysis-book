//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: SiriNCService
// UUID: 5730AE18-4DF0-3D47-B4F7-EAA84456A9F7
//
//                           Arch: x86_64
//                 Source version: 146.4.5.1.0
//       Minimum Mac OS X version: 10.13.0
//                    SDK version: 10.13.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AFUISiriViewControllerDataSource <NSObject>
- (NSArray *)contextAppInfosForSiriViewController:(AFUISiriViewController *)arg1;
- (unsigned long long)lockStateForSiriViewController:(AFUISiriViewController *)arg1;
- (AFBulletin *)siriViewController:(AFUISiriViewController *)arg1 bulletinWithIdentifier:(NSString *)arg2;
- (NSArray *)bulletinsForSiriViewController:(AFUISiriViewController *)arg1;
@end

@protocol AFUISiriViewControllerDelegate <NSObject>
- (void)siriViewContollerDidChangeContentHeight:(AFUISiriViewController *)arg1;
- (void)siriViewController:(AFUISiriViewController *)arg1 acousticIDRequestDidFinishWithSuccess:(BOOL)arg2;
- (void)siriViewControllerWillStartAcousticIDRequest:(AFUISiriViewController *)arg1;
- (void)siriViewController:(AFUISiriViewController *)arg1 stashSnippetControllerCard:(SiriUICard *)arg2 forAddViewsCommand:(SAUIAddViews *)arg3;
- (void)siriViewController:(AFUISiriViewController *)arg1 showBugTemplateWithInformation:(NSDictionary *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 didHideStatusView:(BOOL)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 didChangeDialogPhase:(AFDialogPhase *)arg2;
- (void)siriViewControllerDidChangeListeningState:(AFUISiriViewController *)arg1;
- (BOOL)siriViewController:(AFUISiriViewController *)arg1 attemptUnlockWithPassword:(NSString *)arg2;
- (BOOL)siriViewController:(AFUISiriViewController *)arg1 openURL:(NSURL *)arg2 appBundleID:(NSString *)arg3 allowSiriDismissal:(BOOL)arg4;
- (BOOL)siriViewController:(AFUISiriViewController *)arg1 openURL:(NSURL *)arg2 delaySessionEndForTTS:(BOOL)arg3;
- (void)siriViewController:(AFUISiriViewController *)arg1 siriIdleAndQuietStatusDidChange:(BOOL)arg2;
- (void)siriViewControllerDidChangeVisibility:(AFUISiriViewController *)arg1;
- (BOOL)siriViewController:(AFUISiriViewController *)arg1 launchApplicationWithBundleIdentifier:(NSString *)arg2 withURL:(NSURL *)arg3;
- (SiriUIRequestOptions *)siriViewController:(AFUISiriViewController *)arg1 willStartRequestWithOptions:(SiriUIRequestOptions *)arg2;
- (void)releaseKeySiriViewController:(AFUISiriViewController *)arg1;
- (void)siriViewController:(AFUISiriViewController *)arg1 makeKeyWithCompletion:(void (^)(void))arg2;
- (void)dismissSiriViewController:(AFUISiriViewController *)arg1 delayForTTS:(BOOL)arg2;
- (BOOL)cancelInvocationForSiriViewController:(AFUISiriViewController *)arg1;

@optional
- (void)siriViewController:(AFUISiriViewController *)arg1 willStartListeningForSiriSession:(AFUISiriSession *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 recordingDidFailForSiriSession:(AFUISiriSession *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 recordingDidCancelForSiriSession:(AFUISiriSession *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 recordingDidEndForSiriSession:(AFUISiriSession *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 recordingWillBeginForSiriSession:(AFUISiriSession *)arg2;
- (void)siriViewController:(AFUISiriViewController *)arg1 didEndSession:(AFUISiriSession *)arg2;
@end

@protocol NCCustomAlertDelegate <NSObject>
- (void)customAlertDismissed:(NCCustomAlert *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (BOOL)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@protocol SiriNCClientProtocol
- (void)serviceUIWasDismissed;
- (void)serviceUIWillAppear;
- (void)addViewsCommandStashed:(SAUIAddViews *)arg1 forCardWithTitle:(NSString *)arg2 imagePath:(NSString *)arg3 canBeShortened:(BOOL)arg4;
@end

@protocol SiriNCServiceProtocol
- (void)updateBridgeOSInterstitialsWithCompletion:(void (^)(void))arg1;
- (void)isSiriListening:(void (^)(BOOL))arg1;
- (void)setPluginDirectory:(NSString *)arg1;
- (void)invokeService:(long long)arg1 fromEventSource:(long long)arg2 eventTime:(double)arg3 requestInfo:(AFRequestInfo *)arg4 speechRequestOptions:(AFSpeechRequestOptions *)arg5;
@end

@protocol SiriUXHeaterDelegate <NSObject>
- (void)heaterSuggestsPreheating:(SiriUXHeater *)arg1;
- (void)heaterSuggestsDefrosting:(SiriUXHeater *)arg1;
@end

@interface ServiceDelegate : NSObject <NSXPCListenerDelegate>
{
}

- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SiriNCAlertViewController : NSViewController <SiriUXHeaterDelegate, AFUISiriViewControllerDataSource, AFUISiriViewControllerDelegate>
{
    NSLayoutConstraint *_siriViewHeightConstraint;
    SiriUIAutoDismissalController *_autodismisser;
    BOOL _isHiddenBehindLockScreen;
    BOOL _isSiriIdleAndQuiet;
    BOOL _isAcousticIDRecording;
    BOOL _statusViewHidden;
    BOOL _delaySessionForTTS;
    BOOL _isDelayingAudioResume;
    BOOL _wasDismissed;
    unsigned int _bluetoothOutputDevice;
    float _savedBluetoothOutputVolume;
    unsigned int _savedBluetoothOutputVolumeDevice;
    SiriNCService *_service;
    SiriUXHeater *_heater;
    AFUISiriViewController *_siriViewController;
    AFDialogPhase *_lastDialogPhase;
    unsigned long long _autoDismissMask;
    NSTimer *_idleDelayTimer;
    NSTimer *_audioResumeTimer;
}

+ (unsigned int)_currentBluetoothOutputDevice;
+ (id)_nameForActionType:(long long)arg1;
+ (BOOL)_shouldLogInvocationEvents;
@property(nonatomic) unsigned int savedBluetoothOutputVolumeDevice; // @synthesize savedBluetoothOutputVolumeDevice=_savedBluetoothOutputVolumeDevice;
@property(nonatomic) float savedBluetoothOutputVolume; // @synthesize savedBluetoothOutputVolume=_savedBluetoothOutputVolume;
@property(nonatomic) unsigned int bluetoothOutputDevice; // @synthesize bluetoothOutputDevice=_bluetoothOutputDevice;
@property(nonatomic) BOOL wasDismissed; // @synthesize wasDismissed=_wasDismissed;
@property(nonatomic) BOOL isDelayingAudioResume; // @synthesize isDelayingAudioResume=_isDelayingAudioResume;
@property(retain) NSTimer *audioResumeTimer; // @synthesize audioResumeTimer=_audioResumeTimer;
@property(retain) NSTimer *idleDelayTimer; // @synthesize idleDelayTimer=_idleDelayTimer;
@property unsigned long long autoDismissMask; // @synthesize autoDismissMask=_autoDismissMask;
@property BOOL delaySessionForTTS; // @synthesize delaySessionForTTS=_delaySessionForTTS;
@property BOOL statusViewHidden; // @synthesize statusViewHidden=_statusViewHidden;
@property BOOL isAcousticIDRecording; // @synthesize isAcousticIDRecording=_isAcousticIDRecording;
@property BOOL isSiriIdleAndQuiet; // @synthesize isSiriIdleAndQuiet=_isSiriIdleAndQuiet;
@property(retain) AFDialogPhase *lastDialogPhase; // @synthesize lastDialogPhase=_lastDialogPhase;
@property(retain) AFUISiriViewController *siriViewController; // @synthesize siriViewController=_siriViewController;
@property(readonly, nonatomic) SiriUXHeater *heater; // @synthesize heater=_heater;
@property(readonly) BOOL isHiddenBehindLockScreen; // @synthesize isHiddenBehindLockScreen=_isHiddenBehindLockScreen;
@property __weak SiriNCService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (BOOL)isSiriListening;
- (void)_didUnlockScreen:(id)arg1;
- (void)_didLockScreen:(id)arg1;
- (void)_bluetoothAudioDidChangeNotification:(id)arg1;
- (BOOL)_setBluetoothAudioFormat:(unsigned int)arg1 forDevice:(unsigned int)arg2;
- (void)_restoreBluetoothVolumeOutputForDevice:(unsigned int)arg1;
- (void)_stashBluetoothVolumeForOutputDevice:(unsigned int)arg1;
- (BOOL)handleInvocationCancel;
- (BOOL)handleUserCancel;
- (void)cancelOperation:(id)arg1;
- (void)heaterSuggestsPreheating:(id)arg1;
- (void)heaterSuggestsDefrosting:(id)arg1;
- (void)_ttsQueueDidEmpty:(id)arg1;
- (void)_endDelayingSessionEndForTTS;
- (void)_beginDelayingSessionEndForTTS;
- (BOOL)_isDelayingSessionEnd;
- (void)_wasDismissed;
- (void)didPresentCreateBugTemplateWithConfirm:(BOOL)arg1 values:(id)arg2;
- (void)siriViewContollerDidChangeContentHeight:(id)arg1;
- (double)_siriMaximumHeight;
- (void)siriViewController:(id)arg1 acousticIDRequestDidFinishWithSuccess:(BOOL)arg2;
- (void)siriViewControllerWillStartAcousticIDRequest:(id)arg1;
- (void)siriViewController:(id)arg1 stashSnippetControllerCard:(id)arg2 forAddViewsCommand:(id)arg3;
- (void)siriViewController:(id)arg1 showBugTemplateWithInformation:(id)arg2;
- (void)siriViewController:(id)arg1 willStartListeningForSiriSession:(id)arg2;
- (void)siriViewController:(id)arg1 recordingDidFailForSiriSession:(id)arg2;
- (void)siriViewController:(id)arg1 recordingDidCancelForSiriSession:(id)arg2;
- (void)siriViewController:(id)arg1 recordingDidEndForSiriSession:(id)arg2;
- (void)siriViewController:(id)arg1 recordingWillBeginForSiriSession:(id)arg2;
- (void)siriViewController:(id)arg1 didEndSession:(id)arg2;
- (void)siriViewController:(id)arg1 didHideStatusView:(BOOL)arg2;
- (void)siriViewController:(id)arg1 didChangeDialogPhase:(id)arg2;
- (void)siriViewControllerDidChangeListeningState:(id)arg1;
- (BOOL)siriViewController:(id)arg1 attemptUnlockWithPassword:(id)arg2;
- (BOOL)siriViewController:(id)arg1 openURL:(id)arg2 appBundleID:(id)arg3 allowSiriDismissal:(BOOL)arg4;
- (BOOL)openPreferencePaneWithIdentifier:(id)arg1 anchor:(id)arg2;
- (BOOL)siriViewController:(id)arg1 openURL:(id)arg2 delaySessionEndForTTS:(BOOL)arg3;
- (void)siriViewController:(id)arg1 siriIdleAndQuietStatusDidChange:(BOOL)arg2;
- (void)siriViewControllerDidChangeVisibility:(id)arg1;
- (BOOL)siriViewController:(id)arg1 launchApplicationWithBundleIdentifier:(id)arg2 withURL:(id)arg3;
- (id)siriViewController:(id)arg1 willStartRequestWithOptions:(id)arg2;
- (void)releaseKeySiriViewController:(id)arg1;
- (void)siriViewController:(id)arg1 makeKeyWithCompletion:(CDUnknownBlockType)arg2;
- (void)dismissSiriViewController:(id)arg1 delayForTTS:(BOOL)arg2;
- (BOOL)cancelInvocationForSiriViewController:(id)arg1;
- (id)contextAppInfosForSiriViewController:(id)arg1;
- (unsigned long long)lockStateForSiriViewController:(id)arg1;
- (id)siriViewController:(id)arg1 bulletinWithIdentifier:(id)arg2;
- (id)bulletinsForSiriViewController:(id)arg1;
- (void)handleAction:(long long)arg1 fromEventSource:(long long)arg2 atTime:(double)arg3 requestInfo:(id)arg4 speechRequestOptions:(id)arg5;
- (id)autodismisser;
- (void)dismissController:(id)arg1 withAnimation:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissController:(id)arg1;
- (void)viewDidAppear;
- (void)_localeChanged:(id)arg1;
- (void)_idleDelayTimerFired:(id)arg1;
- (void)_audioResumeTimerFired:(id)arg1;
- (double)_siriMinimumHeight;
- (void)dealloc;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SiriUXHeater : NSObject
{
    id <SiriUXHeaterDelegate> _delegate;
    double _preparationStartTime;
}

@property(nonatomic, getter=_preparationStartTime, setter=_setPreparationStartTime:) double preparationStartTime; // @synthesize preparationStartTime=_preparationStartTime;
@property(nonatomic) __weak id <SiriUXHeaterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_suggestPreheat;
- (void)_suggestDefrost;
- (void)_cancelPreparation;
- (void)cancelPreparation;
- (void)prepareForUseAfterTimeInterval:(double)arg1;

@end

@interface SiriNCService : NSObject <NCCustomAlertDelegate, SiriNCServiceProtocol>
{
    BOOL _alertWasDismissed;
    BOOL _mediaPaused;
    BOOL _shouldResumeAudio;
    BOOL _presentAfterDismiss;
    BOOL _notificationCenterOpen;
    unsigned int _duckedAudioDeviceID;
    NSXPCConnection *_connection;
    NCCustomAlert *_alert;
    struct __CFMachPort *_eventTap;
    struct __CFRunLoopSource *_eventTapSource;
    long long _alertState;
    NSLock *_alertStateLock;
    NSMutableArray *_presentationDependentBlocks;
    NSLock *_presentationDependentBlocksLock;
    NSTimer *_audioResumeTimer;
}

+ (id)_nameForActionType:(long long)arg1;
+ (BOOL)_shouldLogInvocationEvents;
@property(nonatomic) unsigned int duckedAudioDeviceID; // @synthesize duckedAudioDeviceID=_duckedAudioDeviceID;
@property(retain) NSTimer *audioResumeTimer; // @synthesize audioResumeTimer=_audioResumeTimer;
@property(nonatomic) BOOL notificationCenterOpen; // @synthesize notificationCenterOpen=_notificationCenterOpen;
@property(retain) NSLock *presentationDependentBlocksLock; // @synthesize presentationDependentBlocksLock=_presentationDependentBlocksLock;
@property(retain) NSMutableArray *presentationDependentBlocks; // @synthesize presentationDependentBlocks=_presentationDependentBlocks;
@property(retain) NSLock *alertStateLock; // @synthesize alertStateLock=_alertStateLock;
@property BOOL presentAfterDismiss; // @synthesize presentAfterDismiss=_presentAfterDismiss;
@property long long alertState; // @synthesize alertState=_alertState;
@property struct __CFRunLoopSource *eventTapSource; // @synthesize eventTapSource=_eventTapSource;
@property struct __CFMachPort *eventTap; // @synthesize eventTap=_eventTap;
@property(retain) NCCustomAlert *alert; // @synthesize alert=_alert;
@property(nonatomic) BOOL shouldResumeAudio; // @synthesize shouldResumeAudio=_shouldResumeAudio;
@property __weak NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) BOOL mediaPaused; // @synthesize mediaPaused=_mediaPaused;
@property(readonly) BOOL alertWasDismissed; // @synthesize alertWasDismissed=_alertWasDismissed;
- (void).cxx_destruct;
- (BOOL)_handleSpace;
- (BOOL)_handleUserCancel;
- (BOOL)_handleEvent:(struct __CGEvent *)arg1 type:(unsigned int)arg2;
- (void)_releaseEventTap;
- (void)_createEventTap;
- (void)customAlertDismissed:(id)arg1;
- (void)_audioResumeTimerFired:(id)arg1;
- (void)dealloc;
@property(readonly) id <SiriNCClientProtocol> remoteObjectProxy;
- (void)releaseKey;
- (void)makeKeyWithReady:(CDUnknownBlockType)arg1;
- (void)dismissAlertWithCompletion:(CDUnknownBlockType)arg1 animation:(unsigned long long)arg2;
- (void)presentAlert;
- (id)alertViewController;
- (BOOL)_actionRequiresPresentation:(long long)arg1;
- (void)_performThreadSafePresentationDependentBlocksBlock:(CDUnknownBlockType)arg1;
- (void)_performPresentationDependentBlock:(CDUnknownBlockType)arg1;
- (void)alertVCBecameReadyForActions:(id)arg1;
- (void)keyWindowChanged:(id)arg1;
- (void)_performThreadSafeAlertStateBlock:(CDUnknownBlockType)arg1;
- (void)updateBridgeOSInterstitialsWithCompletion:(CDUnknownBlockType)arg1;
- (void)setPluginDirectory:(id)arg1;
- (void)isSiriListening:(CDUnknownBlockType)arg1;
- (void)invokeService:(long long)arg1 fromEventSource:(long long)arg2 eventTime:(double)arg3 requestInfo:(id)arg4 speechRequestOptions:(id)arg5;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_notificationCenterClosed;
- (void)_notificationCenterOpened;
- (void)_receivedNotification:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AceObject (SiriViewService)
- (BOOL)svs_isUserUtterance;
- (BOOL)svs_isUtterance;
- (long long)svs_aceCommandType;
@end

@interface SABaseCommand (SiriViewService)
- (long long)svs_aceCommandType;
@end

@interface SACommandFailed (SiriViewService)
+ (id)svs_commandFailedWithRefId:(id)arg1;
@end

@interface SACommandSucceeded (SiriViewService)
+ (id)svs_commandSucceededWithRefId:(id)arg1;
@end

@interface SAUIAppPunchOut (SiriViewService)
- (long long)svs_aceCommandType;
@end

@interface SASSpeechRecognized (SiriViewService)
- (void)svs_setRecognitionWithCorrectedSpeech:(id)arg1;
- (BOOL)svs_waitsForConfirmation;
- (BOOL)svs_isUserUtterance;
- (BOOL)svs_isUtterance;
@end

@interface SAUIAssistantUtteranceView (SiriViewService)
- (BOOL)svs_isUtterance;
@end

@interface AceObject (Siriland)
- (BOOL)svs_waitsForConfirmation;
@end

@interface SASSpeechRecognized (Siriland)
- (BOOL)svs_waitsForConfirmation;
@end

